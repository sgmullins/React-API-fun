{"version":3,"sources":["utils/api.js","components/Categories/PopCategoriesNavBar.js","components/Carousel/ImageCarousel.js","components/Categories/PopCategories.js"],"names":["fetchPopularClimbStyle","climbCategory","endpoint","fetch","then","res","json","data","routes","Error","message","CategoryNav","selected","onUpdateCategory","className","map","category","key","style","color","outlineColor","onClick","MyCarousel","arrows","centered","infinite","slidesPerPage","route","index","name","rating","stars","url","imgMedium","location","src","alt","href","PopCategories","state","selectedCategory","error","updateCategory","setState","catch","console","warn","isLoading","this","Fragment","Loading","React","Component","PopCategoriesNavBar","propTypes","PropTypes","string","isRequired","func"],"mappings":"gNAOO,SAASA,EAAuBC,GACf,YAAlBA,IACFA,EARF,iMAUsB,UAAlBA,IACFA,EAPF,2MASsB,SAAlBA,IACFA,EAZF,2MAcA,IAAMC,EAAQ,mEAA+DD,EAA/D,mDACd,OAAOE,MAAMD,GACVE,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GACJ,IAAKA,EAAKC,OACR,MAAM,IAAIC,MAAMF,EAAKG,SAEvB,OAAOH,EAAKC,UCtBH,SAASG,EAAT,GAAsD,IAA/BC,EAA8B,EAA9BA,SAAUC,EAAoB,EAApBA,iBAG9C,OACE,wBAAIC,UAAU,eAHG,CAAC,UAAW,QAAS,QAIxBC,KAAI,SAAAC,GAAQ,OACtB,wBAAIC,IAAKD,GACP,4BACEF,UAAU,kBACVI,MACEF,IAAaJ,EACT,CAAEO,MAAO,UAAWC,aAAc,WAClC,CAAED,MAAO,WAEfE,QAAS,kBAAMR,EAAiBG,KAE/BA,Q,2BCbE,SAASM,EAAT,GAAiC,IAAXd,EAAU,EAAVA,OACnC,OACE,kBAAC,IAAD,CAAUe,QAAM,EAACC,UAAQ,EAACC,UAAQ,EAACC,cAAe,GAC/ClB,EAAOO,KAAI,SAACY,EAAOC,GAAW,IACrBC,EAAkDF,EAAlDE,KAAMC,EAA4CH,EAA5CG,OAAQC,EAAoCJ,EAApCI,MAAOC,EAA6BL,EAA7BK,IAAKC,EAAwBN,EAAxBM,UAAWC,EAAaP,EAAbO,SAC7C,OACE,yBAAKpB,UAAU,aAAaG,IAAKe,GAC/B,yBAAKG,IAAKF,EAAWG,IAAKJ,IAD5B,IAEE,yBAAKlB,UAAU,cACb,4BACE,uBAAGuB,KAAML,EAAKlB,UAAU,SACrBe,IAGL,4BACGK,EAAS,GADZ,KACkBA,EAAS,IAE3B,4BAAKJ,GACL,2DAAiCC,S,wDCf1BO,E,2MACnBC,MAAQ,CACNC,iBAAkB,UAClBhC,OAAQ,GACRiC,MAAO,M,EAOTC,eAAiB,SAAAF,GACf,EAAKG,SAAS,CACZH,mBACAC,MAAO,OAEJ,EAAKF,MAAM/B,OAAOgC,IACrBxC,EAAuBwC,GACpBpC,MAAK,SAAAG,GACJ,EAAKoC,UAAS,gBAAGnC,EAAH,EAAGA,OAAH,MAAiB,CAC7BA,OAAO,eACFA,EADC,eAEHgC,EAAmBjC,WAIzBqC,OAAM,SAAAH,GACLI,QAAQC,KAAK,uBAAwBL,GACrC,EAAKE,SAAS,CACZF,MAAO,2C,EAMjBM,UAAY,WAAO,IAAD,EAC4B,EAAKR,MAAzCC,EADQ,EACRA,iBAAkBC,EADV,EACUA,MAE1B,OAHgB,EACiBjC,OAElBgC,IAA+B,OAAVC,G,mFA9BpCO,KAAKN,eAAeM,KAAKT,MAAMC,oB,+BAiCvB,IAAD,EACqCQ,KAAKT,MAAzCC,EADD,EACCA,iBAAkBhC,EADnB,EACmBA,OAAQiC,EAD3B,EAC2BA,MAElC,OACE,kBAAC,IAAMQ,SAAP,KACE,wBAAInC,UAAU,0BACZ,0BAAMA,UAAU,SAAhB,qCAEF,kBAAC,EAAD,CACEF,SAAU4B,EACV3B,iBAAkBmC,KAAKN,iBAExBM,KAAKD,aAAe,kBAACG,EAAA,EAAD,MAEpBT,GAAS,2BAAIA,GACbjC,EAAOgC,IACN,kBAAC,EAAD,CAAehC,OAAQA,EAAOgC,U,GAzDGW,IAAMC,WAgEjDC,EAAoBC,UAAY,CAC9B1C,SAAU2C,IAAUC,OAAOC,WAC3B5C,iBAAkB0C,IAAUG,KAAKD","file":"static/js/5.3e5faf56.chunk.js","sourcesContent":["const boulder =\n  '105722593,105908128,107094498,106070976,106464345,106403724,106385730,105722755,105725464,105811221,106390524,106413750,106032561,105722992,106022301,105880494,105755113,107950727,106068943';\nconst trad =\n  '105924807,105912416,105836362,105732422,105748496,106138026,106154042,105872592,106008982,105845493,105717718,105732410,105860676,105884815,105748786,105872293,105717310,105862915,105839153,105863822';\nconst sport =\n  '105717892,106286394,106566444,105989372,110356279,106132213,107177226,106759853,105789917,106282216,106333612,106207680,106333601,106045269,105910536,106586323,106011340,105749158,106811013,108043545';\n\nexport function fetchPopularClimbStyle(climbCategory) {\n  if (climbCategory === 'Boulder') {\n    climbCategory = boulder;\n  }\n  if (climbCategory === 'Sport') {\n    climbCategory = sport;\n  }\n  if (climbCategory === 'Trad') {\n    climbCategory = trad;\n  }\n  const endpoint = `https://www.mountainproject.com/data/get-routes?routeIds=${climbCategory}&key=106700300-69d63c2bbf7a526522a670c23cadce51`;\n  return fetch(endpoint)\n    .then(res => res.json())\n    .then(data => {\n      if (!data.routes) {\n        throw new Error(data.message);\n      }\n      return data.routes;\n    });\n}\n\n// export function fetchPopularClimbsByLocation(location) {\n//   const endpoint = `http://www.mountainproject.com/data/`;\n// }\n","import React from 'react';\n\nexport default function CategoryNav({ selected, onUpdateCategory }) {\n  const categories = ['Boulder', 'Sport', 'Trad'];\n\n  return (\n    <ul className='flex-center'>\n      {categories.map(category => (\n        <li key={category}>\n          <button\n            className='category-button'\n            style={\n              category === selected\n                ? { color: '#ff3363', outlineColor: '#ff3363' }\n                : { color: '#e6ebf2' }\n            }\n            onClick={() => onUpdateCategory(category)}\n          >\n            {category}\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n}\n","import React from 'react';\n\nimport Carousel from '@brainhubeu/react-carousel';\nimport '@brainhubeu/react-carousel/lib/style.css';\n\nexport default function MyCarousel({ routes }) {\n  return (\n    <Carousel arrows centered infinite slidesPerPage={2}>\n      {routes.map((route, index) => {\n        const { name, rating, stars, url, imgMedium, location } = route;\n        return (\n          <div className='my-top-div' key={url}>\n            <img src={imgMedium} alt={url} />;\n            <div className='climb-info'>\n              <h2>\n                <a href={url} className='slide'>\n                  {name}\n                </a>\n              </h2>\n              <h3>\n                {location[1]}, {location[0]}\n              </h3>\n              <h3>{rating}</h3>\n              <small>Mountain Project Rating: {stars}</small>\n            </div>\n          </div>\n        );\n      })}\n    </Carousel>\n  );\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n//Component imports\nimport { fetchPopularClimbStyle } from '../../utils/api';\nimport PopCategoriesNavBar from './PopCategoriesNavBar';\nimport ImageCarousel from '../Carousel/ImageCarousel';\nimport Loading from '../Loader/Loading';\n\nexport default class PopCategories extends React.Component {\n  state = {\n    selectedCategory: 'Boulder',\n    routes: {},\n    error: null,\n  };\n\n  componentDidMount() {\n    this.updateCategory(this.state.selectedCategory);\n  }\n\n  updateCategory = selectedCategory => {\n    this.setState({\n      selectedCategory,\n      error: null,\n    });\n    if (!this.state.routes[selectedCategory]) {\n      fetchPopularClimbStyle(selectedCategory)\n        .then(data => {\n          this.setState(({ routes }) => ({\n            routes: {\n              ...routes,\n              [selectedCategory]: data,\n            },\n          }));\n        })\n        .catch(error => {\n          console.warn('Error fetching repos', error);\n          this.setState({\n            error: 'There was an error fetching routes',\n          });\n        });\n    }\n  };\n\n  isLoading = () => {\n    const { selectedCategory, error, routes } = this.state;\n\n    return !routes[selectedCategory] && error === null;\n  };\n\n  render() {\n    const { selectedCategory, routes, error } = this.state;\n\n    return (\n      <React.Fragment>\n        <h1 className='center-text page-title'>\n          <span className='slide'>Top Routes From Mountain Project</span>\n        </h1>\n        <PopCategoriesNavBar\n          selected={selectedCategory}\n          onUpdateCategory={this.updateCategory}\n        />\n        {this.isLoading() && <Loading />}\n\n        {error && <p>{error}</p>}\n        {routes[selectedCategory] && (\n          <ImageCarousel routes={routes[selectedCategory]} />\n        )}\n      </React.Fragment>\n    );\n  }\n}\n\nPopCategoriesNavBar.propTypes = {\n  selected: PropTypes.string.isRequired,\n  onUpdateCategory: PropTypes.func.isRequired,\n};\n"],"sourceRoot":""}