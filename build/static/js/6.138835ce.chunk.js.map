{"version":3,"sources":["components/battles/PlayerPreview.js","components/battles/Instructions.js","components/battles/PlayerInput.js","components/battles/Battle.js"],"names":["PlayerPreview","username","onReset","label","className","Instructions","size","PlayerInput","state","handleSubmit","e","preventDefault","props","onSubmit","handleChange","setState","target","value","action","this","htmlFor","type","placeholder","id","onChange","disabled","React","Component","Battle","playerOne","playerTwo","player","Fragment"],"mappings":"wLAGe,SAASA,EAAT,GAAqD,EAA5BC,SAA4B,EAAlBC,QAAkB,EAATC,MACzD,OACE,yBAAKC,UAAU,iBACb,wBAAIA,UAAU,YAAd,2CADF,K,oBCDW,SAASC,IACtB,OACE,yBAAKD,UAAU,yBACb,wBAAIA,UAAU,yBAAd,gBACA,wBAAIA,UAAU,qDACZ,4BACE,wBAAIA,UAAU,aACZ,0BAAMA,UAAU,SAAhB,uBAEF,kBAAC,IAAD,CAAeA,UAAU,eAAeE,KAAM,OAEhD,4BACE,wBAAIF,UAAU,aACZ,0BAAMA,UAAU,SAAhB,4BAEF,kBAAC,IAAD,CAAYA,UAAU,eAAeE,KAAM,OAE7C,4BACE,wBAAIF,UAAU,cACZ,0BAAMA,UAAU,SAAhB,oBAEF,kBAAC,IAAD,CAAaA,UAAU,eAAeE,KAAM,S,ICtBjCC,E,2MACnBC,MAAQ,CACNP,SAAU,I,EAEZQ,aAAe,SAAAC,GACbA,EAAEC,iBACF,EAAKC,MAAMC,SAAS,EAAKL,MAAMP,W,EAGjCa,aAAe,SAAAJ,GACb,EAAKK,SAAS,CACZd,SAAUS,EAAEM,OAAOC,S,wEAIrB,OACE,0BAAMC,OAAO,GAAGd,UAAU,gBAAgBS,SAAUM,KAAKV,cACvD,2BAAOW,QAAQ,WAAWhB,UAAU,gBACjCe,KAAKP,MAAMT,OAEd,yBAAKC,UAAU,qBACb,2BACEiB,KAAK,OACLjB,UAAU,QACVkB,YAAY,2BACZC,GAAG,WACHN,MAAOE,KAAKX,MAAMP,SAClBuB,SAAUL,KAAKL,eAEjB,4BAAQV,UAAU,MAAMiB,KAAK,SAASI,UAAWN,KAAKX,MAAMP,UAA5D,gB,GA7B+ByB,IAAMC,W,4CCG1BC,E,2MACnBpB,MAAQ,CACNqB,UAAW,KACXC,UAAW,M,EAEbrB,aAAe,SAACc,EAAIQ,GAClB,EAAKhB,SAAL,eACGQ,EAAKQ,K,wEAGA,IAAD,SAC0BZ,KAAKX,MAA9BqB,EADD,EACCA,UAAWC,EADZ,EACYA,UAEnB,OACE,kBAAC,IAAME,SAAP,KACE,kBAAC3B,EAAD,MACA,yBAAKD,UAAU,qBACb,wBAAIA,UAAU,yBACZ,0BAAMA,UAAU,SAAhB,oCAEF,yBAAKA,UAAU,oBACE,OAAdyB,EACC,kBAAC,EAAD,CACE1B,MAAM,aACNU,SAAU,SAAAkB,GAAM,OAAI,EAAKtB,aAAa,YAAasB,MAGrD,kBAAC/B,EAAD,CACEC,SAAU4B,EACV3B,QAAS,iBAAO,IAChBC,MAAO,eAGI,OAAd2B,EACC,kBAAC,EAAD,CACE3B,MAAM,aACNU,SAAU,SAAAkB,GAAM,OAAI,EAAKtB,aAAa,YAAasB,MAGrD,kBAAC/B,EAAD,CACEC,SAAU6B,EACV5B,QAAS,iBAAO,IAChBC,MAAO,sB,GA1CawB","file":"static/js/6.138835ce.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport default function PlayerPreview({ username, onReset, label }) {\n  return (\n    <div className='column player'>\n      <h2 className='api-fail'>NO LONGER FUNCTIONAL DUE TO API CHANGES</h2>;\n    </div>\n  );\n}\nPlayerPreview.propTypes = {\n  username: PropTypes.string.isRequired,\n  onReset: PropTypes.func.isRequired,\n  label: PropTypes.string.isRequired,\n};\n","import React from 'react';\nimport { FaUserFriends, FaMountain } from 'react-icons/fa';\nimport { GiChampions } from 'react-icons/gi';\n\nexport default function Instructions() {\n  return (\n    <div className='instruction-container'>\n      <h1 className='center-text header-lg'>Instructions</h1>\n      <ol className='battle-instructions container-sm grid center-text'>\n        <li>\n          <h3 className='header-sm'>\n            <span className='slide'>Enter Two MP Users</span>\n          </h3>\n          <FaUserFriends className='battle-icons' size={140} />\n        </li>\n        <li>\n          <h3 className='header-sm'>\n            <span className='slide'>Battle For The Mountain</span>\n          </h3>\n          <FaMountain className='battle-icons' size={140} />\n        </li>\n        <li>\n          <h3 className='header-sm '>\n            <span className='slide'>See the Winners</span>\n          </h3>\n          <GiChampions className='battle-icons' size={140} />\n        </li>\n      </ol>\n    </div>\n  );\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport default class PlayerInput extends React.Component {\n  state = {\n    username: '',\n  };\n  handleSubmit = e => {\n    e.preventDefault();\n    this.props.onSubmit(this.state.username);\n  };\n\n  handleChange = e => {\n    this.setState({\n      username: e.target.value,\n    });\n  };\n  render() {\n    return (\n      <form action='' className='column player' onSubmit={this.handleSubmit}>\n        <label htmlFor='username' className='player-label'>\n          {this.props.label}\n        </label>\n        <div className='row player-inputs'>\n          <input\n            type='text'\n            className='input'\n            placeholder='MountainProject Username'\n            id='username'\n            value={this.state.username}\n            onChange={this.handleChange}\n          />\n          <button className='btn' type='submit' disabled={!this.state.username}>\n            Submit\n          </button>\n        </div>\n      </form>\n    );\n  }\n}\n\nPlayerInput.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n  label: PropTypes.string.isRequired,\n};\n","import React, { Component } from 'react';\n//component imports\nimport PlayerPreview from './PlayerPreview';\nimport Instructions from './Instructions';\nimport PlayerInput from './PlayerInput';\n\nexport default class Battle extends Component {\n  state = {\n    playerOne: null,\n    playerTwo: null,\n  };\n  handleSubmit = (id, player) => {\n    this.setState({\n      [id]: player,\n    });\n  };\n  render() {\n    const { playerOne, playerTwo } = this.state;\n\n    return (\n      <React.Fragment>\n        <Instructions />\n        <div className='players-container'>\n          <h1 className='center-text header-lg'>\n            <span className='slide'>Potential Kings of the Mountain</span>\n          </h1>\n          <div className='row space-around'>\n            {playerOne === null ? (\n              <PlayerInput\n                label='Player One'\n                onSubmit={player => this.handleSubmit('playerOne', player)}\n              />\n            ) : (\n              <PlayerPreview\n                username={playerOne}\n                onReset={() => ({})}\n                label={'Player One'}\n              />\n            )}\n            {playerTwo === null ? (\n              <PlayerInput\n                label='Player Two'\n                onSubmit={player => this.handleSubmit('playerTwo', player)}\n              />\n            ) : (\n              <PlayerPreview\n                username={playerTwo}\n                onReset={() => ({})}\n                label={'Player Two'}\n              />\n            )}\n          </div>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n"],"sourceRoot":""}